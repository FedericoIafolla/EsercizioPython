version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    ports:
      - "9092:9092"
      - "9093:9093"
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 10s
      retries: 20

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - "8090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: imp2
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: postgres@gmail.com
      PGADMIN_DEFAULT_PASSWORD: 1234
    ports:
      - "5050:80"

  impala:
    image: apache/impala:4.5.0-impala_quickstart_hms
    container_name: impala-quickstart
    ports:
      - "21050:21050"
      - "25000:25000"
      - "9083:9083"
      - "50070:50070"
    environment:
      HDFS_REPLICATION: 1
    tty: true
    stdin_open: true
    command: [ "bash", "-c", "/start-impala.sh" ]

  app:
    build: .
    depends_on:
      kafka:
        condition: service_healthy
      impala:
        condition: service_started
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      ORCHESTRATOR_TOPIC: orchestrator_topic
      JOB_ORCHESTRATOR_TOPIC: job_orchestrator_topic
      CONSUMER_GROUP: orchestrator_group
      IMPALA_HOST: impala-quickstart
      IMPALA_PORT: 21050
      IMPALA_DATABASE: test_db
      IMPALA_TABLE: processed_data
      LOG_LEVEL: INFO
    volumes:
      - ./src:/app/src
      - ./payload.json:/app/payload.json

volumes:
  pgdata: